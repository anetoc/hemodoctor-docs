version: '3.8'

services:
  # HemoDoctor FastAPI Service
  hemodoctor-api:
    build:
      context: ../HEMODOCTOR_CONSOLIDADO_v2.0_20251010/03_DESENVOLVIMENTO/CODIGO_FONTE
      dockerfile: Dockerfile
    container_name: hemodoctor-api
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=true
      - ENABLE_BUG2_FIX=true
      - LOG_LEVEL=INFO
    volumes:
      - ../HEMODOCTOR_CONSOLIDADO_v2.0_20251010/03_DESENVOLVIMENTO/CODIGO_FONTE:/app
      - ./logs:/app/logs
    networks:
      - hemodoctor-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.hemodoctor.service=api"
      - "com.hemodoctor.version=2.0.0"

  # PostgreSQL Database (opcional, se o sistema usar)
  hemodoctor-db:
    image: postgres:15-alpine
    container_name: hemodoctor-db
    environment:
      POSTGRES_DB: hemodoctor
      POSTGRES_USER: hemodoctor
      POSTGRES_PASSWORD: hemodoctor_password
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - "5432:5432"
    volumes:
      - hemodoctor-db-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hemodoctor-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hemodoctor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (para cache, se necess√°rio)
  hemodoctor-redis:
    image: redis:7-alpine
    container_name: hemodoctor-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - hemodoctor-redis-data:/data
    networks:
      - hemodoctor-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx (reverse proxy, opcional)
  hemodoctor-nginx:
    image: nginx:alpine
    container_name: hemodoctor-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - hemodoctor-api
    networks:
      - hemodoctor-network
    restart: unless-stopped
    profiles:
      - production

networks:
  hemodoctor-network:
    driver: bridge
    name: hemodoctor-network

volumes:
  hemodoctor-db-data:
    name: hemodoctor-db-data
  hemodoctor-redis-data:
    name: hemodoctor-redis-data
