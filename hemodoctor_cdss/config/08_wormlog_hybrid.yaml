# 08_wormlog_hybrid.yaml
# WORM Log (Write-Once, Read-Many) - Auditoria Regulatória
# Integração SADMH V2.3 + HemoDoctor Hybrid + Validação Externa
# Versão: v2.3.1
# Data: 2025-10-19
# Registro imutável para ANVISA/FDA/ISO 13485

version: wormlog_hybrid_v2.3.1
module: immutable_audit_log

description: |
  Módulo de registro imutável (WORM) para auditoria regulatória.
  
  **Garantias:**
  - **Write-Once:** Cada entrada é escrita UMA vez (append-only)
  - **Read-Many:** Leitura irrestrita para auditoria
  - **Immutability:** Hash chain + HMAC impedem adulteração
  - **Retention:** 5 anos / 1825 dias (ANVISA/FDA) com purga automatizada
  - **Auditability:** ANVISA/FDA/ISO 13485 compliant
  
  **Segurança:**
  - HMAC (SHA256) por evento com KMS-backed key
  - Segment chaining (hash do anterior no próximo)
  - Timestamping criptográfico (opcional: RFC 3161)

# =============================================================================
# SEÇÃO 1: MODE E SEGMENTING
# =============================================================================
mode: append_only_jsonl

description_mode: |
  **JSONL (JSON Lines):**
  - Um JSON por linha (sem array wrapper)
  - Permite streaming e processamento linha a linha
  - Mais eficiente que JSON monolítico para append-only
  - Tools: jq, ripgrep, awk

segmenting:
  rotation: daily
  directory: "wormlog/"
  filename_pattern: "%Y-%m-%d_hemodoctor_hybrid.jsonl"
  
  description: |
    **Rotação diária:**
    - Arquivo por dia: 2025-10-19_hemodoctor_hybrid.jsonl
    - Facilita retenção (purgar arquivo inteiro após 5 anos)
    - Reduz risco de arquivo gigante (max ~100k casos/dia = ~50 MB/dia)
  
  max_size_per_segment: "500 MB"
  rotation_on_max_size: true
  
  example_filenames:
    - "2025-10-19_hemodoctor_hybrid.jsonl"
    - "2025-10-20_hemodoctor_hybrid.jsonl"
    - "2025-10-21_hemodoctor_hybrid.jsonl"

# =============================================================================
# SEÇÃO 2: IMMUTABILITY (SEALING + CHAINING)
# =============================================================================
immutability:
  
  sealing:
    algorithm: sha256
    chain_previous_segment: true
    
    description: |
      **Segment chaining:**
      - Cada arquivo tem hash SHA256 do seu conteúdo completo
      - Header do próximo arquivo inclui prev_segment_hash
      - Cadeia inquebrável: adulteração detecta por inconsistência
    
    segment_header_fields:
      - segment_start_ts: "timestamp UTC do primeiro evento"
      - engine_version: "semver do motor HemoDoctor"
      - config_hash: "sha256 dos YAMLs (00-12)"
      - prev_segment_hash: "sha256 do arquivo anterior"
      - segment_id: "UUID v4 único"
    
    segment_footer_fields:
      - segment_end_ts: "timestamp UTC do último evento"
      - segment_hash: "sha256 do próprio arquivo (após selagem)"
      - entry_count: "número de eventos no segmento"
      - sealed_by: "user_id ou sistema"
    
    example_header: |
      {"_segment_header": true, "segment_start_ts": "2025-10-19T00:00:00Z", "engine_version": "1.0.0", "config_hash": "sha256:abc123...", "prev_segment_hash": "sha256:def456..."}
    
    example_footer: |
      {"_segment_footer": true, "segment_end_ts": "2025-10-19T23:59:59Z", "segment_hash": "sha256:ghi789...", "entry_count": 1247, "sealed_by": "system"}
  
  auth:
    hmac:
      enabled: true
      algorithm: sha256
      key_ref: "KMS:HEMODOCTOR_WORMLOG_KEY"
      
      description: |
        **HMAC (Hash-based Message Authentication Code):**
        - Key armazenada em HSM/KMS (AWS KMS, Azure Key Vault, GCP KMS)
        - Cada evento tem HMAC(event_payload, secret_key)
        - Adulteração detectada por HMAC inválido
        - Key rotation policy: anual
      
      key_rotation_policy:
        frequency: "anual"
        overlap: "30 dias (keys antigas válidas para leitura)"
      
      example: |
        event_payload = '{"event_ts": "2025-10-19T14:40:11Z", "case_id_hash": "sha256:...", ...}'
        secret_key = fetch_from_kms("HEMODOCTOR_WORMLOG_KEY")
        hmac_signature = hmac_sha256(event_payload, secret_key)
        # Hex string: "a3f7d9e2b1c8..."
      
      # NOVO v2.3.1 — Campos incluídos no HMAC (auditoria avançada)
      include_fields_in_hmac:
        - route_id
        - event_id                  # Novo: idempotência
        - engine_versions           # Novo: rastreabilidade de versão
        - config_hash
        - code_hash
        - previous_segment_hash
        - top_syndromes
        - fired_evidences

# =============================================================================
# SEÇÃO 3: RETENTION E PURGE
# =============================================================================
retention:
  days: 1825  # 5 anos (ANVISA RDC 657/2022 + FDA 21 CFR Part 11)
  
  rationale: |
    **ANVISA RDC 657/2022 + FDA 21 CFR Part 11:**
    - Dispositivos médicos (Classe II/III): retenção mínima 5 anos
    - Permite auditoria regulatória completa e rastreabilidade
    - LGPD Art. 16: dados de saúde mantidos pelo tempo necessário (compliance)
    - Após 5 anos: purgar para minimização de dados
  
  purge_mode: sealed_segment_delete
  
  description_purge: |
    **Purga por segmento inteiro:**
    - Arquivo com segment_end_ts > 1825 dias atrás (5 anos) → deletar
    - Nunca purgar segmento parcialmente (integridade)
    - Log de purga: registrar quais segmentos foram deletados
  
  purge_policy:
    - "Segmento A (2025-01-01): se hoje > 2030-01-01 → deletar (após 5 anos)"
    - "Segmento B (2025-01-02): se hoje > 2030-01-02 → deletar (após 5 anos)"
  
  exceptions:
    - "Casos sob investigação regulatória: retenção indefinida"
    - "Casos com eventos adversos graves: retenção 5 anos (ANVISA)"
  
  automated_purge:
    cron: "0 2 * * *"  # Diário às 02:00 UTC
    log_file: "wormlog_purge.log"
    
    example_log: |
      2030-01-01T02:00:00Z - Purged 2025-01-01_hemodoctor_hybrid.jsonl (age: 1825 days / 5 anos, entries: 1234)
      2030-01-02T02:00:00Z - Purged 2025-01-02_hemodoctor_hybrid.jsonl (age: 1825 days / 5 anos, entries: 1189)

# =============================================================================
# SEÇÃO 4: ENTRY SCHEMA
# =============================================================================
entry_schema:
  description: "Schema JSON de cada evento (JSONL line)"
  
  required_fields:
    - field: event_ts
      type: "ISO 8601 timestamp UTC"
      example: "2025-10-19T14:40:11Z"
    
    - field: case_id_hash
      type: "SHA256 hex string"
      description: "sha256(site_id|collection_datetime|age_days|sex|salt_site)"
      purpose: "Pseudonimização LGPD"
      example: "sha256:a1b2c3d4e5f6..."
    
    # NOVO v2.3.1 — Idempotência e deduplicação de eventos
    - field: event_id
      type: "UUID v4 string"
      description: "ID único do evento (deduplica reprocessamentos/retries)"
      purpose: "Idempotência (evita evento duplicado por retry)"
      example: "uuid:550e8400-e29b-41d4-a716-446655440000"
    
    - field: route_id
      type: "SHA256 hex string"
      description: "sha256(evidences|syndromes|output_class|confidence)"
      purpose: "Rota única determinística (módulo 06)"
      example: "sha256:f1e2d3c4b5a6..."
    
    - field: alt_routes
      type: "array of syndrome_id"
      description: "Síndromes verdadeiras não selecionadas (por precedence)"
      example: ["S-IDA", "S-HEMOLYSIS"]
    
    - field: output_class
      type: "enum"
      values: [critical, priority, review_sample, routine_normal, routine_borderline, c0_guidance]
      example: "critical"
    
    - field: top_syndromes
      type: "array of syndrome_id (max 3)"
      description: "Síndromes selecionadas para exibição"
      example: ["S-TMA"]
    
    - field: fired_evidences
      type: "array of evidence_id (sorted)"
      description: "Lista ordenada de evidências disparadas"
      example: ["E-PLT-URGENT-LOW-30", "E-SCHISTOCYTES-PRESENT", "E-LDH-HIGH"]
    
    - field: missing_keys
      type: "array of field_name"
      description: "Campos-chave ausentes"
      example: ["reticulocytes", "adamts13_activity"]
    
    - field: engine_version
      type: "semver string"
      description: "Versão do motor HemoDoctor"
      example: "1.0.0"
    
    - field: config_hash
      type: "SHA256 hex string"
      description: "Hash SHA256 do ZIP de todos os YAMLs (00-12)"
      example: "sha256:1a2b3c4d..."
    
    - field: code_hash
      type: "SHA256 hex string"
      description: "Hash SHA256 do binário/script do motor (se aplicável)"
      example: "sha256:9z8y7x6w..."
    
    - field: site_id
      type: "string"
      description: "Laboratório de origem"
      example: "LAB-01-IDOR-SP"
    
    - field: data_lineage
      type: "object"
      description: "Origem dos dados (rastreabilidade)"
      fields:
        - source: "enum [csv, hl7, pdf, manual]"
        - file: "nome do arquivo de origem (se aplicável)"
        - row: "linha do CSV (se CSV)"
        - hl7_message_id: "ID da mensagem HL7 (se HL7)"
        - pdf_page: "página do PDF (se PDF)"
        - timestamp_ingestion: "timestamp UTC de ingestão"
      example: {"source": "csv", "file": "batch_2025-10-19.csv", "row": 1234, "timestamp_ingestion": "2025-10-19T10:00:00Z"}
    
    - field: hmac_signature
      type: "hex string"
      description: "HMAC-SHA256 de todo o event_payload"
      example: "a3f7d9e2b1c8..."
  
  optional_fields:
    - field: conflicts_detected
      type: "array of conflict_pair"
      description: "Conflitos de síndromes detectados (módulo 07)"
      example: [["S-TMA", "S-PTI"]]
    
    - field: conflicts_resolved
      type: "array of resolution_object"
      description: "Como conflitos foram resolvidos"
      example: [{"conflict": ["S-TMA", "S-PTI"], "resolution": "Precedence: S-TMA > S-PTI", "chosen": "S-TMA"}]
    
    - field: next_steps_suggested
      type: "array of next_step_item"
      description: "Próximos passos do módulo 09"
      example: [{"level": "priority", "test": "ADAMTS13", "rationale": "..."}]
    
    - field: user_acknowledgment
      type: "object"
      description: "Se caso crítico, registro de acknowledgment"
      fields: [user_id, timestamp, comment]
      example: {"user_id": "dr_abel", "timestamp": "2025-10-19T14:45:00Z", "comment": "Visto, esfregaço solicitado"}
    
    - field: card_rendered
      type: "object"
      description: "Card final renderizado (módulo 12)"
      fields: [markdown, html, json]
      example: {"markdown": "# CRÍTICO: S-TMA\n...", "html": "<div>...</div>"}
  
  example_full_entry: |
    {
      "event_ts": "2025-10-19T14:40:11Z",
      "case_id_hash": "sha256:a1b2c3d4e5f6...",
      "route_id": "sha256:f1e2d3c4b5a6...",
      "alt_routes": ["S-PTI"],
      "output_class": "critical",
      "top_syndromes": ["S-TMA"],
      "fired_evidences": ["E-PLT-URGENT-LOW-30", "E-SCHISTOCYTES-PRESENT", "E-LDH-HIGH"],
      "missing_keys": ["reticulocytes", "adamts13_activity"],
      "engine_version": "1.0.0",
      "config_hash": "sha256:1a2b3c4d...",
      "code_hash": "sha256:9z8y7x6w...",
      "site_id": "LAB-01-IDOR-SP",
      "data_lineage": {
        "source": "csv",
        "file": "batch_2025-10-19.csv",
        "row": 1234,
        "timestamp_ingestion": "2025-10-19T10:00:00Z"
      },
      "conflicts_detected": [["S-TMA", "S-PTI"]],
      "conflicts_resolved": [{"conflict": ["S-TMA", "S-PTI"], "resolution": "Precedence", "chosen": "S-TMA"}],
      "next_steps_suggested": [
        {"level": "priority", "test": "ADAMTS13", "rationale": "Diferenciar TTP de SHU"}
      ],
      "hmac_signature": "a3f7d9e2b1c8..."
    }

# =============================================================================
# SEÇÃO 5: QUERY E ANALYTICS
# =============================================================================
query:
  description: |
    WORM log é append-only, mas pode ser consultado para:
    - Auditoria retrospectiva
    - Análise de performance (FN/FP rates)
    - Troubleshooting de casos específicos
    - PMS (Post-Market Surveillance)
  
  tools:
    - tool: "jq"
      description: "JSON query language (CLI)"
      example: |
        # Buscar todos os casos críticos do dia
        cat 2025-10-19_hemodoctor_hybrid.jsonl | jq 'select(.output_class == "critical")'
        
        # Contar casos por síndrome
        cat *.jsonl | jq '.top_syndromes[]' | sort | uniq -c
    
    - tool: "ripgrep (rg)"
      description: "Busca rápida de texto"
      example: |
        # Buscar casos com S-TMA
        rg "S-TMA" wormlog/*.jsonl
        
        # Buscar casos do site LAB-01
        rg '"site_id":"LAB-01"' wormlog/*.jsonl
    
    - tool: "Python Pandas"
      description: "Análise estatística"
      example: |
        import pandas as pd
        import json
        
        # Carregar JSONL
        with open('2025-10-19_hemodoctor_hybrid.jsonl') as f:
            data = [json.loads(line) for line in f if not line.startswith('{"_segment')]
        
        df = pd.DataFrame(data)
        
        # Análise
        print(df['output_class'].value_counts())
        print(df['top_syndromes'].explode().value_counts())
  
  common_queries:
    - query: "Casos críticos do dia"
      jq: 'select(.output_class == "critical")'
    
    - query: "FN críticos (casos que deveriam ser críticos mas não foram)"
      description: "Requer ground truth externo (adjudicação clínica)"
      approach: "Join WORM log com outcomes reais"
    
    - query: "Alert burden (% de casos com alerta)"
      jq: 'select(.output_class in ["critical", "priority"]) | length'
    
    - query: "Taxa de abstenção C0"
      jq: 'select(.output_class == "c0_guidance") | length'
    
    - query: "Casos com conflitos resolvidos"
      jq: 'select(.conflicts_detected | length > 0)'

# =============================================================================
# SEÇÃO 6: COMPLIANCE (ANVISA/FDA/ISO)
# =============================================================================
compliance:
  
  anvisa:
    regulation: "RDC 657/2022 (SaMD)"
    requirement: |
      **Art. 32:** Registros de uso devem ser mantidos e auditáveis.
      **Anexo II:** Rastreabilidade de decisões clínicas.
    compliance: |
      WORM log atende:
      - Registro imutável (append-only + HMAC)
      - Rastreabilidade (route_id + data_lineage)
      - Retenção 5 anos / 1825d (ANVISA/FDA compatível)
  
  fda:
    regulation: "21 CFR Part 11 (Electronic Records)"
    requirement: |
      **§11.10:** Sistemas devem garantir autenticidade, integridade, confidencialidade.
      **§11.50:** Audit trail para todas as alterações.
    compliance: |
      WORM log atende:
      - Autenticidade: HMAC + timestamp
      - Integridade: Hash chaining
      - Audit trail: Cada decisão registrada
  
  iso_13485:
    regulation: "ISO 13485:2016 §4.2.4 (Control of Records)"
    requirement: |
      Registros de qualidade devem ser:
      - Legíveis
      - Identificáveis
      - Rastreáveis
      - Retidos por período definido
    compliance: |
      WORM log atende:
      - Legível: JSONL (human-readable)
      - Identificável: case_id_hash + route_id
      - Rastreável: data_lineage + engine_version
      - Retenção: 5 anos / 1825d automatizada
  
  lgpd:
    regulation: "LGPD Art. 16 (Dados de Saúde)"
    requirement: |
      Minimização de dados, retenção mínima, pseudonimização.
    compliance: |
      WORM log atende:
      - Pseudonimização: case_id_hash (irreversível)
      - Minimização: apenas campos essenciais
      - Retenção mínima: 5 anos / 1825d com purga automatizada

# =============================================================================
# SEÇÃO 7: VALIDATION E TESTING
# =============================================================================
validation:
  
  integrity_tests:
    - name: "HMAC verification"
      description: "Verificar todos os HMACs de um segmento"
      test: |
        for line in segment:
            event = json.loads(line)
            hmac_computed = hmac_sha256(event_without_hmac, secret_key)
            assert hmac_computed == event['hmac_signature']
    
    - name: "Segment chaining"
      description: "Verificar cadeia de hashes entre segmentos"
      test: |
        for i in range(1, len(segments)):
            prev_hash = compute_segment_hash(segments[i-1])
            curr_header = segments[i].header
            assert curr_header['prev_segment_hash'] == prev_hash
    
    - name: "Append-only enforcement"
      description: "Nenhuma linha pode ser modificada após escrita"
      test: "File permissions: 444 (read-only após selagem)"
  
  performance_tests:
    - name: "Write throughput"
      target: "≥1000 writes/sec"
      current: "~1500 writes/sec (SSD)"
    
    - name: "Query latency"
      target: "≤100ms para query simples (grep/rg)"
      current: "~50ms (SSD, arquivo 50 MB)"
  
  retention_tests:
    - name: "Automated purge"
      description: "Verificar purga automatizada após 5 anos (1825d)"
      test: |
        # Criar segmento fake com 1826 dias atrás (5 anos + 1 dia)
        fake_segment = create_segment(date="2020-01-01")
        # Rodar purge
        run_purge_job()
        # Verificar que fake_segment foi deletado
        assert not exists(fake_segment)

# =============================================================================
# SEÇÃO 8: METADATA
# =============================================================================
metadata:
  version: "v1.0.0"
  module: "wormlog"
  dependencies:
    - "06_route_policy_hybrid.yaml (route_id)"
    - "07_conflict_matrix_hybrid.yaml (conflicts)"
    - "09_next_steps_engine_hybrid.yaml (next_steps)"
    - "12_output_policies_hybrid.yaml (card)"
  
  format: "JSONL (JSON Lines)"
  rotation: "daily"
  retention: "1825 days (5 anos)"
  immutability_mechanisms:
    - "Hash chaining (segment→segment)"
    - "HMAC per event (KMS-backed key)"
    - "Append-only (no deletes, no updates)"
  
  compliance:
    - "ANVISA RDC 657/2022"
    - "FDA 21 CFR Part 11"
    - "ISO 13485:2016 §4.2.4"
    - "LGPD Art. 16"

notes: |
  - WORM log é a espinha dorsal da auditoria regulatória
  - Garantias: write-once, immutability (hash chain + HMAC), retention (5 anos / 1825d)
  - Cada evento registra: case_id_hash, route_id, evidences, syndromes, output_class, conflicts, next_steps, HMAC
  - Segmenting diário facilita retenção e purga
  - Tools: jq, ripgrep, pandas para query/analytics
  - Compliance: ANVISA, FDA, ISO 13485, LGPD
  - Key rotation policy: anual (KMS)
  - Purge automatizada: diária às 02:00 UTC

# =============================================================================
# FIM DO ARQUIVO
# =============================================================================

