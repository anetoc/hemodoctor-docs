openapi: 3.1.0
info:
  title: HemoDoctor Model Manager API
  version: 1.0.0
  description: |
    **Internal Class A microservice** for ML model versioning and lifecycle management.
    
    **IEC 62304 Classification:** Class A (no direct clinical impact)
    
    **Responsibilities:**
    - Version control for ML models (Git LFS / MLflow)
    - Hyperparameter tracking
    - Training/validation dataset provenance
    - Performance monitoring (ROC-AUC, calibration)
    - Model promotion (dev → staging → production)
    - Rollback capability
    
    **Traceability:** SDD-001 §3.6 | NFR-002, SEC-001 (SRS-001)

servers:
  - url: http://model-manager:8083/api/internal

security:
  - BearerAuth: []

tags:
  - name: Model Management
  - name: Health

paths:
  /models:
    get:
      summary: List all model versions
      operationId: listModels
      tags: [Model Management]
      responses:
        '200':
          description: Models retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    version: {type: string}
                    model_type: {type: string, enum: [XGBoost, LogisticRegression]}
                    status: {type: string, enum: [ACTIVE, DEPRECATED, ARCHIVED]}
                    performance_metrics:
                      type: object
                      properties:
                        roc_auc: {type: number}
                        precision: {type: number}
                        recall: {type: number}

    post:
      summary: Register new model version
      operationId: registerModel
      tags: [Model Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [version, model_type, model_file_url]
              properties:
                version: {type: string}
                model_type: {type: string, enum: [XGBoost, LogisticRegression]}
                model_file_url: {type: string, format: uri}
                performance_metrics: {type: object}
      responses:
        '201':
          description: Model registered

  /models/{version}/promote:
    post:
      summary: Promote model to production
      operationId: promoteModel
      tags: [Model Management]
      parameters:
        - name: version
          in: path
          required: true
          schema: {type: string}
      responses:
        '200':
          description: Model promoted to production

  /models/{version}/rollback:
    post:
      summary: Rollback to previous model version
      operationId: rollbackModel
      tags: [Model Management]
      parameters:
        - name: version
          in: path
          required: true
          schema: {type: string}
      responses:
        '200':
          description: Model rollback completed

  /health:
    get:
      summary: Health check
      operationId: healthCheck
      tags: [Health]
      security: []
      responses:
        '200':
          description: Service healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: {type: string, enum: [healthy]}
                  safety_class: {type: string, enum: [A]}

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
